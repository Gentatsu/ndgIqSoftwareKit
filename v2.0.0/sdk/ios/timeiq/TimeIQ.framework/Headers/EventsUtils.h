//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/events/EventsUtils.java
//

#ifndef _EventsUtils_H_
#define _EventsUtils_H_

@class EventContext;
@class ScheduledThreadPoolExecutor;
@class RecurrenceDetails;
@class Result;
@protocol ITSOEvent;
#import "JBRunnable.h"
@protocol Callable;
#import "JBExecutorService.h"
#import "JBFuture.h"
@protocol ScheduledFuture;
#import "JBArrayList.h"

#import "JB.h"

/**
 @brief Created by stzour on 22/07/2015.
 */
@interface EventsUtils : NSObject {
}

+ (void)submitWithRunnable:(id<Runnable>)runnable
                  withEventContext:(EventContext *)eventContext;

+ (id<Future>)submitWithCallable:(id<Callable>)callable
                                                    withEventContext:(EventContext *)eventContext;

+ (void)submitToSingleThreadWithRunnable:(id<Runnable>)runnable
                                withEventContext:(EventContext *)eventContext;

+ (id<Future>)submitToSingleThreadWithCallable:(id<Callable>)callable
                                                                  withEventContext:(EventContext *)eventContext;

+ (id<ScheduledFuture>)submitScheduledWithRunnable:(id<Runnable>)runnable
                                                                    withLong:(long64)delayInMilliseconds
                                                            withEventContext:(EventContext *)eventContext;

+ (id<ScheduledFuture>)submitScheduledWithCallable:(id<Callable>)callable
                                                                              withLong:(long64)delayInMilliseconds
                                                                      withEventContext:(EventContext *)eventContext;

/**
 @brief use only in tests!!!!
 to not use in production code!!!
 */
+ (boolean)waitForAllThreads;

+ (boolean)waitForAllThreadsWithBoolean:(boolean)longerWait;

+ (Result *)waitForAllThreadsWithEventContext:(EventContext *)eventsContext;

+ (NSString *)getEventDescriptionStrWithITSOEvent:(id<ITSOEvent>)event;

+ (NSString *)getTimeValueStrWithLong:(long64)timeInMillis;

+ (ArrayList*)calculateStartTimesForRecurrenceWithLong:(long64)startTime
                                       withRecurrenceDetails:(RecurrenceDetails *)recDetails;

+ (NSString *)getDateStringFromTimeWithLong:(long64)time;

- (instancetype)init;

@end

FOUNDATION_EXPORT BOOL EventsUtils_initialized;
J2OBJC_STATIC_INIT(EventsUtils)

FOUNDATION_EXPORT long64 EventsUtils_LAST_SUPPORTED_DATE_;
J2OBJC_STATIC_FIELD_GETTER(EventsUtils, LAST_SUPPORTED_DATE_, long64)

FOUNDATION_EXPORT NSString *EventsUtils_TAG_EVENTS_;
J2OBJC_STATIC_FIELD_GETTER(EventsUtils, TAG_EVENTS_, NSString *)

FOUNDATION_EXPORT id<ExecutorService> EventsUtils_multiExecutor_;
J2OBJC_STATIC_FIELD_GETTER(EventsUtils, multiExecutor_, id<ExecutorService>)
//J2OBJC_STATIC_FIELD_SETTER(EventsUtils, multiExecutor_, id<ExecutorService>)

FOUNDATION_EXPORT id<ExecutorService> EventsUtils_singleExecutor_;
J2OBJC_STATIC_FIELD_GETTER(EventsUtils, singleExecutor_, id<ExecutorService>)
//J2OBJC_STATIC_FIELD_SETTER(EventsUtils, singleExecutor_, id<ExecutorService>)

FOUNDATION_EXPORT ScheduledThreadPoolExecutor *EventsUtils_scheduledExecutor_;
J2OBJC_STATIC_FIELD_GETTER(EventsUtils, scheduledExecutor_, ScheduledThreadPoolExecutor *)
//J2OBJC_STATIC_FIELD_SETTER(EventsUtils, scheduledExecutor_, ScheduledThreadPoolExecutor *)

typedef EventsUtils ComIntelWearablePlatformTimeiqEventsEventsUtils;

#endif // _EventsUtils_H_
