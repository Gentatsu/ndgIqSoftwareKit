//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/triggers/charge/ChargeTriggersManager.java
//

#ifndef _ChargeTriggersManager_H_
#define _ChargeTriggersManager_H_

@class ChargeTriggerInner;
@class ChargeTriggersManager_BatteryState;
@class DeviceStateData;
@protocol IChargeTriggerStorage;
@protocol IDeviceStateManager;
@protocol IManagersListener;
@protocol ITSOLogger;
@protocol ITriggerLifeCycleListener;
#import "JBHashSet.h"
#import "JBArrayList.h"

#import "JB.h"
#import "IDeviceStateListener.h"
#import "ABaseTriggersManager.h"
#import "IChargeTriggersManager.h"

/**
 @brief Created by mleib on 26/04/2015.
 */
@interface ChargeTriggersManager : ABaseTriggersManager < IChargeTriggersManager, IDeviceStateListener > {
 @public
  id<IDeviceStateManager> m_deviceStateManager_;
  id<ITSOLogger> m_logger_;
  boolean m_isRegistered_;
  ChargeTriggersManager_BatteryState *m_prevBatteryState_;
}

- (instancetype)init;

- (instancetype)initWithIDeviceStateManager:(id<IDeviceStateManager>)deviceStateManager
                  withIChargeTriggerStorage:(id<IChargeTriggerStorage>)triggerStorage
                             withITSOLogger:(id<ITSOLogger>)logger;

- (void)startWithIManagersListener:(id<IManagersListener>)triggerListener
     withITriggerLifeCycleListener:(id<ITriggerLifeCycleListener>)triggerLifeCycleListener;

- (void)triggerAllActiveTriggers;

- (void)registerChargeChangeIfNeeded;

- (void)register__;

- (void)unRegisterChargeChangeIfNeeded;

- (void)unregister;

- (boolean)onTriggerAddedWithITriggerInner:(ChargeTriggerInner *)trigger;

- (void)updateBatteryState;

- (void)triggerTriggerIfStateIsAppropriateWithChargeTriggerInner:(ChargeTriggerInner *)trigger;

- (void)cancelTriggerWithITriggerInner:(ChargeTriggerInner *)trigger;

- (void)onDestroy;

- (void)onTriggerSetAsTriggeredWithITriggerInner:(ChargeTriggerInner *)trigger;

/**
 @brief synchronized so we will not call this method concurrently, thus m_prevBatteryLevel & m_prevCharging will not have thread-safety issued
 */
- (void)onDeviceStateChangeWithDeviceStateData:(DeviceStateData *)deviceStateData
                              withJavaUtilList:(ArrayList*)deviceStateTypeChanges;

- (void)checkTriggersAndTriggerIfNeededWithInt:(int)deviceCurrentPercent
                                   withBoolean:(boolean)isConnected;

- (void)triggerTriggersWithJavaUtilCollection:(Set*)toTrigger;

/**
 @brief For testing
 */
- (boolean)isRegistered;

- (void)copyAllFieldsTo:(ChargeTriggersManager *)other;

@end

FOUNDATION_EXPORT BOOL ChargeTriggersManager_initialized;
J2OBJC_STATIC_INIT(ChargeTriggersManager)

//J2OBJC_FIELD_SETTER(ChargeTriggersManager, m_deviceStateManager_, id<IDeviceStateManager>)
//J2OBJC_FIELD_SETTER(ChargeTriggersManager, m_logger_, id<ITSOLogger>)
//J2OBJC_FIELD_SETTER(ChargeTriggersManager, m_prevBatteryState_, ChargeTriggersManager_BatteryState *)

FOUNDATION_EXPORT NSString *ChargeTriggersManager_TAG_;
J2OBJC_STATIC_FIELD_GETTER(ChargeTriggersManager, TAG_, NSString *)

FOUNDATION_EXPORT id ChargeTriggersManager_m_lock_;
J2OBJC_STATIC_FIELD_GETTER(ChargeTriggersManager, m_lock_, id)

typedef ChargeTriggersManager ComIntelWearablePlatformTimeiqTriggersChargeChargeTriggersManager;

@interface ChargeTriggersManager_BatteryState : NSObject {
 @public
  int batteryLevel_;
  boolean isConnected_;
}

- (instancetype)initWithChargeTriggersManager:(ChargeTriggersManager *)outer$
                                      withInt:(int)batteryLevel
                                  withBoolean:(boolean)isConnected;

- (void)copyAllFieldsTo:(ChargeTriggersManager_BatteryState *)other;

@end

__attribute__((always_inline)) inline void ChargeTriggersManager_BatteryState_init() {}

#endif // _ChargeTriggersManager_H_
