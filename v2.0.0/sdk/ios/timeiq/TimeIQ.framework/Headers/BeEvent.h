//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/api/events/BeEvent.java
//

#ifndef _BeEvent_H_
#define _BeEvent_H_

@class BeEvent_BeEventBuilder;
@class RecurrenceDetails;
@class TSOEventType;
@class TSOPlace;

#import "JB.h"
#import "BaseEvent.h"

/**
 @brief The BE event is the basic event type.
 The user states where he wants to be and at what time. He then receives time to leave alerts in order to get there on time. New events are constructed and added to the SDK using builders. The builders allow the flexibility of declaring mandatory parameters vs. optional parameters. For the BE event - the destination location and the arrival time are the mandatory parameters. The option to add the event to the calendar is an optional parameter - if not stated - default is false. Usage Example: BeEvent event = new BeEvent.BeEventBuilder(NEW_YORK, System.currentTimeMillis() + TWO_DAYS).subject("BasketBall Practice").reminderTimeBeforeTTL(FIVE_MINUTES).build();
 */
@interface BeEvent : BaseEvent {
 @public
  /**
   @brief Should the event be added to the calendar.
   Default value if not set - false.
   */
  boolean addToCalendar_;
  /**
   @brief For a recurrent event - defines the recurrence details (see RecurrenceDetails) Default value if not set - null - not recurrent.
   */
  RecurrenceDetails *recurrenceDetails_;
  /**
   @brief States the time the Be Event was created by the user
   */
  long64 creationTime_;
}

- (instancetype)initWithBeEvent_BeEventBuilder:(BeEvent_BeEventBuilder *)builder;

/**
 @brief Gets the time the event was created by the user
 @return long - creation time in miliseconds
 */
- (long64)getCreationTime;

/**
 @brief Returns whether or not this be event is also a calendar event
 @return true if this be event is also calendar event, false otherwise
 */
- (boolean)isAddToCalendar;

/**
 @brief Returns the event type
 @return eventType
 */
- (TSOEventType *)getEventType;

/**
 @brief Returns the RecurrenceDetails of the event, which include details regarding the times, frequencies and end time of recurring event
 @return RecurrenceDetails in case of a recurring event, null otherwise
 */
- (RecurrenceDetails *)getRecurrenceDetails;

- (NSString *)description;

- (boolean)isEqual:(id)o;

- (NSUInteger)hash;

- (void)copyAllFieldsTo:(BeEvent *)other;

@end

__attribute__((always_inline)) inline void BeEvent_init() {}

//J2OBJC_FIELD_SETTER(BeEvent, recurrenceDetails_, RecurrenceDetails *)

typedef BeEvent ComIntelWearablePlatformTimeiqApiEventsBeEvent;

/**
 @brief Event builder for BeEvents
 */
@interface BeEvent_BeEventBuilder : BaseEvent_BaseEventBuilder {
 @public
  boolean addToCalendar__;
  RecurrenceDetails *recurrenceDetails__;
  long64 creationTime_;
}

/**
 @brief Constructs a new BeEventBuilder from location and arrival time
 @param location the location of the event, represented as TSOPlace
 @param arrivalTime the planned arrival time in milliseconds
 */
- (instancetype)initWithTSOPlace:(TSOPlace *)location
                        withLong:(long64)arrivalTime;

/**
 @brief Constructs a new BeEventBuilder from existing BeEvent
 @param beEvent the BeEvent to copy from
 */
- (instancetype)initWithBeEvent:(BeEvent *)beEvent;

/**
 @brief Sets the recurrence details of the BeEvent and returns an updated BeEvent
 @param recurrenceDetails includes details regarding the times, frequencies and end time of recurring event
 @return BeEventBuilder
 */
- (BeEvent_BeEventBuilder *)recurrenceDetailsWithRecurrenceDetails:(RecurrenceDetails *)recurrenceDetails;

/**
 @brief Sets whether or not this BeEvent should be added to calendar and returns an updated BeEvent
 @param addToCalendar true if this BeEvent should be added to calendar, false otherwise
 @return BeEventBuilder
 */
- (BeEvent_BeEventBuilder *)addToCalendarWithBoolean:(boolean)addToCalendar;

/**
 @brief Returns a BeEvent with all the previously defined parameters
 @return BeEvent
 */
- (BeEvent *)build;

- (void)copyAllFieldsTo:(BeEvent_BeEventBuilder *)other;

@end

__attribute__((always_inline)) inline void BeEvent_BeEventBuilder_init() {}

//J2OBJC_FIELD_SETTER(BeEvent_BeEventBuilder, recurrenceDetails__, RecurrenceDetails *)

#endif // _BeEvent_H_
