//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/places/modules/visitsmodule/algs/NavPoint.java
//

#ifndef _NavPoint_H_
#define _NavPoint_H_

#import "JB.h"

/**
 @brief Class that store raw data of a navigation point
 @author Chieh-Yih Wan (IXR, Intel Labs), Dennis D Matthews (Java port)
 */
@interface NavPoint : NSObject {
 @public
  double Latitude_;
  double Longitude_;
  double Altitude_;
  double Accuracy_;
  double Speed_;
  long64 TimeStamp_;
}

- (void)initialize__WithDouble:(double)lat_
                    withDouble:(double)long_ OBJC_METHOD_FAMILY_NONE;

- (void)initialize__WithDouble:(double)lat_
                    withDouble:(double)long_
                    withDouble:(double)accuracy_ OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

- (instancetype)initWithDouble:(double)lat_
                    withDouble:(double)long_;

- (instancetype)initWithDouble:(double)lat_
                    withDouble:(double)long_
                    withDouble:(double)accuracy_;

- (instancetype)initWithDouble:(double)lat_
                    withDouble:(double)long_
                    withDouble:(double)accuracy_
                    withDouble:(double)speed;

- (instancetype)initWithDouble:(double)lat_
                    withDouble:(double)long_
                    withDouble:(double)accuracy_
                      withLong:(long64)timestamp;

- (instancetype)initWithDouble:(double)lat_
                    withDouble:(double)long_
                    withDouble:(double)accuracy_
                    withDouble:(double)speed
                      withLong:(long64)timestamp;

- (double)GetDistanceKMWithNavPoint:(NavPoint *)toPoint;

- (double)GetDistanceMilesWithNavPoint:(NavPoint *)toPoint;

- (double)GetDistanceFeetWithNavPoint:(NavPoint *)toPoint;

+ (double)GetDistanceKMWithNavPoint:(NavPoint *)toPoint
                        withNavPoint:(NavPoint *)fromPoint;

+ (double)ToMilesWithDouble:(double)km;

+ (double)ToFeetWithDouble:(double)miles;

/**
 @brief Helper function to calculates speed in MPH
 @param dtStart Time stamp of starting point
 @param dtEnd Time stamp of end point
 @param distanceMiles Distance in miles between the two points
 @return Speed in MPH
 */
+ (double)getSpeedMPHWithLong:(long64)dtStart
                      withLong:(long64)dtEnd
                    withDouble:(double)distanceMiles;

+ (double)GetSpeedMPHWithNavPoint:(NavPoint *)fromPoint
                      withNavPoint:(NavPoint *)currentPoint;

/**
 @brief Calculate speed in MPH from previous NavPoint
 @param fromPoint Previous NavPoint
 @return Speed in MPH
 */
- (double)GetSpeedMPHWithNavPoint:(NavPoint *)fromPoint;

- (double)GetLatitude;

- (double)GetLongitude;

- (double)GetAltitude;

- (double)GetAccuracy;

- (double)GetSpeed;

- (long64)GetTimeStamp;

- (void)SetLatitudeWithDouble:(double)n_Latitude;

- (void)SetLongitudeWithDouble:(double)n_Longitude;

- (void)copyAllFieldsTo:(NavPoint *)other;

@end

__attribute__((always_inline)) inline void NavPoint_init() {}

typedef NavPoint ComIntelWearablePlatformTimeiqPlacesModulesVisitsmoduleAlgsNavPoint;

#endif // _NavPoint_H_
