//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/resolver/IResolverModule.java
//

#ifndef _IResolverModule_H_
#define _IResolverModule_H_

#import "NSNumber+JavaAPI.h"
@class ResultData;
@class TSOPlace;
#import "JBArrayList.h"

#import "JB.h"

/**
 @brief IResolverModule Resolves a search term to a location and a phone number to a relevant business place, considering anchor location
 */
@protocol IResolverModule < NSObject >

/**
 @brief Resolves meeting considering anchor location
 @param searchTerm name of a place or an address to search
 @param location anchor location for resolving
 @param subject subject of the meeting
 @param startTime meeting start time
 @param endTime meeting end time
 @param organizerEmail email address of the organizer of the meeting
 @param attendees meeting attendees
 @param organizer is this the meeting organizer
 @param allDayEvent is this an all day event
 @param recurrent is this a recurrent meeting
 @return a wrapper that contains a ResolvedLocationsResponse which holds all relevant results <BR> usage example: resolveMeeting("My office", new TSOPlace(32.075699, 34.772134));
 */
- (ResultData *)resolveMeetingWithNSString:(NSString *)searchTerm
                              withTSOPlace:(TSOPlace *)location
                              withNSString:(NSString *)subject
                                  withLong:(long64)startTime
                                  withLong:(long64)endTime
                              withNSString:(NSString *)organizerEmail
                          withJavaUtilList:(ArrayList*)attendees
                       withJBBoolean:(JBBoolean *)organizer
                       withJBBoolean:(JBBoolean *)allDayEvent
                       withJBBoolean:(JBBoolean *)recurrent;

/**
 @brief Resolves meeting considering anchor location with limitation on number of results
 @param searchTerm name of a place or an address to search
 @param location anchor location for resolving
 @param subject subject of the meeting
 @param startTime meeting start time
 @param endTime meeting end time
 @param organizerEmail email address of the organizer of the meeting
 @param attendees meeting attendees
 @param organizer is this the meeting organizer
 @param allDayEvent is this an all day event
 @param recurrent is this a recurrent meeting
 @param maxResults limits the number of returned results
 @return a wrapper that contains a ResolvedLocationsResponse which holds all relevant results <BR> usage example: resolveMeeting("Yakum office", new TSOPlace(32.075699, 34.772134),5);
 */
- (ResultData *)resolveMeetingWithNSString:(NSString *)searchTerm
                              withTSOPlace:(TSOPlace *)location
                              withNSString:(NSString *)subject
                                  withLong:(long64)startTime
                                  withLong:(long64)endTime
                              withNSString:(NSString *)organizerEmail
                          withJavaUtilList:(ArrayList*)attendees
                       withJBBoolean:(JBBoolean *)organizer
                       withJBBoolean:(JBBoolean *)allDayEvent
                       withJBBoolean:(JBBoolean *)recurrent
                                   withInt:(int)maxResults;

/**
 @brief Resolves location considering anchor location
 @param searchTerm name of a place or an address to search
 @param location anchor location for resolving
 @return a wrapper that contains a ResolvedLocationsResponse which holds all relevant results <BR> usage example: resolveLocation("coffee", new TSOPlace(32.075699, 34.772134));
 */
- (ResultData *)resolveLocationWithNSString:(NSString *)searchTerm
                               withTSOPlace:(TSOPlace *)location;

/**
 @brief Resolves location considering anchor location with limitation on number of results
 @param searchTerm name of a place or an address to search
 @param location anchor location for resolving
 @param maxResults limits the number of returned results
 @return a wrapper that contains a ResolvedLocationsResponse which holds all relevant results <BR> usage example: resolveLocation("coffee", new TSOPlace(32.075699, 34.772134),5);
 */
- (ResultData *)resolveLocationWithNSString:(NSString *)searchTerm
                               withTSOPlace:(TSOPlace *)location
                                    withInt:(int)maxResults;

/**
 @brief Resolves business phone number to a business place location considering anchor location
 @param phoneNumber phone number of a business place
 @param location anchor location for resolving
 @return a wrapper that contains a ResolveBusinessPhoneResponse which holds all relevant results <BR> usage example: resolveLocation("+14804037600", new TSOPlace(32.075699, 34.772134));
 */
- (ResultData *)resolveBusinessPhoneWithNSString:(NSString *)phoneNumber
                                    withTSOPlace:(TSOPlace *)location;

/**
 @brief Resolves location as you type considering anchor location
 @param searchTerm name of a place or an address to search
 @param location anchor location for resolving
 @return a wrapper that contains a ResolvedLocationsResponse which holds all relevant results <BR> usage example: resolveLocation("cof", new TSOPlace(32.075699, 34.772134));
 */
- (ResultData *)resolveAsYouTypeLocationWithNSString:(NSString *)searchTerm
                                        withTSOPlace:(TSOPlace *)location
                                             withInt:(int)maxResults;

/**
 @brief Get additional details for a google location
 @param googleLocationId location id given by google
 @return a wrapper that contains a ResolvedLocationsResponse which holds all relevant results <BR> usage example: resolveLocation("cof", new TSOPlace(32.075699, 34.772134));
 */
- (ResultData *)getAdditionalDetailsWithNSString:(NSString *)googleLocationId;

@end

__attribute__((always_inline)) inline void IResolverModule_init() {}

#define ComIntelWearablePlatformTimeiqResolverIResolverModule IResolverModule

#endif // _IResolverModule_H_
