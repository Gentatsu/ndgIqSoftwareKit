//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/common/calendar/ICalendar.java
//

#ifndef _ICalendar_H_
#define _ICalendar_H_

@class CalendarDetails;
@class TSOCalendarMeeting;
@protocol ICalendarListener;
#import "JBArrayList.h"

#import "JB.h"

/**
 @brief Created by eskoran on 03/06/2015.
 */
@protocol ICalendar < NSObject >

/**
 @brief activate the calendar
 */
- (void)activate;

/**
 @brief deactivate the calendar
 */
- (void)deActivate;

/**
 @return is the calendar activated and is ready to be used
 */
- (boolean)isActivated;

- (NSString *)getCalendarId;

- (CalendarDetails *)getCalendarDetails;

/**
 @param startTimeFrame - time in millis
 @param endTimeFrame - time in millis
 @return All calendarEvents instances that start and end in the time frame provided.
 */
- (ArrayList*)getMeetingsWithLong:(long64)startTimeFrame
                               withLong:(long64)endTimeFrame;

/**
 @param meetingId - the id representing the eventInstance
 @return calendar meeting
 */
- (TSOCalendarMeeting *)getMeetingInstanceByIdWithNSString:(NSString *)meetingId;

/**
 @param meetingId
 @return list of ids representing each of the meeting instances (up to 100 instances)
 */
- (ArrayList*)getInstancesOfMeetingWithNSString:(NSString *)meetingId;

/**
 @param listener - listener to be triggered when a calendar meeting are added/removed/updated
 */
- (void)registerForUpdatesWithICalendarListener:(id<ICalendarListener>)listener;

/**
 @param listener - listener to remove from listeners list.
 */
- (void)unRegisterForUpdatesWithICalendarListener:(id<ICalendarListener>)listener;

/**
 @param meeting
 @return meetingId representing the a instance in case of a one time meeting, or the general event id in case of a recurrent meeting.
 */
- (NSString *)addMeetingWithTSOCalendarMeeting:(TSOCalendarMeeting *)meeting;

/**
 @param meetings
 @return list of meetingIds representing the a instance in case of a one time meeting, or the general event id in case of a recurrent meeting.
 */
- (ArrayList*)addMeetingsWithJavaUtilList:(ArrayList*)meetings;

/**
 @param meeting
 @return true if successfully updated
 */
- (boolean)updateMeetingWithTSOCalendarMeeting:(TSOCalendarMeeting *)meeting;

/**
 @brief deletes a meeting and all its instances
 @param meetingId
 @return true if successfully deleted
 */
- (boolean)deleteMeetingWithNSString:(NSString *)meetingId;

/**
 @brief deletes multiple meetings and all its instances
 @param meetingsId
 @return List of Booleans is delete success
 */
- (ArrayList*)deleteMeetingsWithJavaUtilList:(ArrayList*)meetingsId;

@end

__attribute__((always_inline)) inline void ICalendar_init() {}

#define ComIntelWearablePlatformTimeiqCommonCalendarICalendar ICalendar

#endif // _ICalendar_H_
