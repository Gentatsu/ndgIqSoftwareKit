//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/sensors/logger/StatsFileLogger.java
//

#ifndef _StatsFileLogger_H_
#define _StatsFileLogger_H_

@class BaseSensorData;
@class ClassFactory;
@class DeviceStateData;
@class HttpSentDataInfo;
@class Mot;
@class MotInfo;
@class PolicyChangeInfo;
@class PolicyMode;
@class ReceiverSensorsRequest;
@class SensorType;
@class SensorsEngine;
@class StatsFileType;
@protocol IAuthorizationManager;
@protocol IBuildPrefs;
@protocol IDeviceStateManager;
@protocol IHttpProvider;
@protocol IPlacesEngine;
@protocol IVisitEntry;
#import "JBArrayList.h"
#import "JBHashtable.h"

#import "JB.h"
#include "IDeviceStateListener.h"
#include "IHttpSentDataListener.h"
#include "IMotChangeListener.h"
#include "IVisitListener.h"
#include "ISensorDataReceiver.h"
#include "IStatsFileLogger.h"
#include "IPolicyListener.h"

/**
 @brief Created by orencoh2 on 9/11/14.
 */
@interface StatsFileLogger : NSObject < ISensorDataReceiver, IPolicyListener, IVisitListener, IMotChangeListener, IDeviceStateListener, IHttpSentDataListener, IStatsFileLogger > {
 @public
  HashMap* m_statsFileStreamsList_;
  long64 m_currentTimeStamp_;
  long64 m_statsFileNameTimeStamp_;
  PolicyMode *m_policyMode_;
  HashMap* m_sensorsRecentTimeStamp_;
  Mot *m_mot_;
  NSString *m_visit_;
  int m_batteryLevel_;
  boolean m_batteryCharging_;
  HashMap* m_sensorsSampleCounter_;
  long64 m_startTimeStampCurPolicy_;
  long64 m_fuseAccSum_;
  long64 m_WifiFingerPrintsSum_;
  int m_batteryLevelStart_;
  boolean m_isHighAccuracySample_;
  ArrayList* m_httpSentDataInfoList_;
  id<IHttpProvider> m_httpProvider_;
  NSString *m_userIdentifier_;
  NSString *m_userName_;
  SensorsEngine *m_sensorsEngine_;
  id<IPlacesEngine> m_placesEngine_;
  id<IDeviceStateManager> m_deviceStateManager_;
  id<IAuthorizationManager> m_authorizationManager_;
  id<IBuildPrefs> m_buildPrefs_;
}

- (instancetype)init;

- (instancetype)initWithClassFactory:(ClassFactory *)factory;

- (instancetype)initWithSensorsEngine:(SensorsEngine *)sensorsEngine
                    withIPlacesEngine:(id<IPlacesEngine>)placesEngine
            withIAuthorizationManager:(id<IAuthorizationManager>)authorizationManager
                    withIHttpProvider:(id<IHttpProvider>)httpProvider
              withIDeviceStateManager:(id<IDeviceStateManager>)deviceStateManager
                      withIBuildPrefs:(id<IBuildPrefs>)buildPrefs;

- (void)initStatParams OBJC_METHOD_FAMILY_NONE;

- (void)resetStatsMembers;

- (Mot *)getCurrentMot;

- (void)onDataReceivedWithBaseSensorData:(BaseSensorData *)data;

- (void)onResetReceiver;

- (void)onSampleIntervalChangedWithSensorType:(SensorType *)sensorType
                                         withLong:(long64)sampleInterval;

- (ReceiverSensorsRequest *)generateReceiverSensorsRequest;

- (void)writeToStatsFileWithStatsFileType:(StatsFileType *)statsFileType
                                 withNSString:(NSString *)msg;

/**
 @brief Retrieve the build settings for each file
 @param statsFileType
 @return 
 */
- (boolean)getLogBuildSettingsWithStatsFileType:(StatsFileType *)statsFileType;

- (NSString *)getTitleLineWithStatsFileType:(StatsFileType *)statsFileType;

- (NSString *)getStatsFileNameWithStatsFileType:(StatsFileType *)statsFileType;

- (void)closeStatsFiles;

- (void)onPolicyChangeWithPolicyChangeInfo:(PolicyChangeInfo *)policyChangeInfo;

/**
 @brief Notify that there is a change on location sample mode: GPS available or lost
 @param isHighAccuracySample
 */
- (void)onLocationSampleChangeWithBoolean:(boolean)isHighAccuracySample;

- (void)appendPolicyStatsWithPolicyMode:(PolicyMode *)previousPolicyMode;

- (void)onMotChangeWithMotInfo:(MotInfo *)newMot;

- (void)onVisitStartedWithIVisitEntry:(id<IVisitEntry>)visit;

- (void)onVisitEndedWithIVisitEntry:(id<IVisitEntry>)visit;

- (void)onDeviceStateChangeWithDeviceStateData:(DeviceStateData *)deviceStateData
                              withJavaUtilList:(ArrayList*)deviceStateTypeChanges;

- (void)onDataSentViaHttpWithHttpSentDataInfo:(HttpSentDataInfo *)httpSentDataInfo;

- (void)writeCachedHttpSentData;

- (void)copyAllFieldsTo:(StatsFileLogger *)other;

@end

FOUNDATION_EXPORT BOOL StatsFileLogger_initialized;
J2OBJC_STATIC_INIT(StatsFileLogger)

//J2OBJC_FIELD_SETTER(StatsFileLogger, m_statsFileStreamsList_, HashMap*)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_policyMode_, PolicyMode *)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_sensorsRecentTimeStamp_, HashMap*)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_mot_, Mot *)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_visit_, NSString *)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_sensorsSampleCounter_, HashMap*)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_httpSentDataInfoList_, ArrayList*)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_httpProvider_, id<IHttpProvider>)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_userIdentifier_, NSString *)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_userName_, NSString *)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_sensorsEngine_, SensorsEngine *)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_placesEngine_, id<IPlacesEngine>)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_deviceStateManager_, id<IDeviceStateManager>)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_authorizationManager_, id<IAuthorizationManager>)
//J2OBJC_FIELD_SETTER(StatsFileLogger, m_buildPrefs_, id<IBuildPrefs>)

FOUNDATION_EXPORT NSString *StatsFileLogger_TAG_;
J2OBJC_STATIC_FIELD_GETTER(StatsFileLogger, TAG_, NSString *)

FOUNDATION_EXPORT NSString *StatsFileLogger_VISIT_ONGOING_;
J2OBJC_STATIC_FIELD_GETTER(StatsFileLogger, VISIT_ONGOING_, NSString *)

FOUNDATION_EXPORT NSString *StatsFileLogger_VISIT_UNKNOWN_;
J2OBJC_STATIC_FIELD_GETTER(StatsFileLogger, VISIT_UNKNOWN_, NSString *)

FOUNDATION_EXPORT NSString *StatsFileLogger_SENSORS_STATS_TITLE_LINE_;
J2OBJC_STATIC_FIELD_GETTER(StatsFileLogger, SENSORS_STATS_TITLE_LINE_, NSString *)

FOUNDATION_EXPORT NSString *StatsFileLogger_POLICY_STATS_TITLE_LINE_;
J2OBJC_STATIC_FIELD_GETTER(StatsFileLogger, POLICY_STATS_TITLE_LINE_, NSString *)

FOUNDATION_EXPORT NSString *StatsFileLogger_DEVICE_STATE_TITLE_LINE_;
J2OBJC_STATIC_FIELD_GETTER(StatsFileLogger, DEVICE_STATE_TITLE_LINE_, NSString *)

FOUNDATION_EXPORT NSString *StatsFileLogger_NETWORK_TITLE_LINE_;
J2OBJC_STATIC_FIELD_GETTER(StatsFileLogger, NETWORK_TITLE_LINE_, NSString *)

typedef StatsFileLogger ComIntelWearablePlatformTimeiqSensorsLoggerStatsFileLogger;

#endif // _StatsFileLogger_H_
