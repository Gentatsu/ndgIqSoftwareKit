//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/places/modules/visitsmodule/algs/LocationClusterAgent.java
//

#ifndef _LocationClusterAgent_H_
#define _LocationClusterAgent_H_

@class CLUSTER_STATE;
@class ClusterParameters;
@class LocationCluster;
@class NavPoint;

#import "JB.h"

/**
 @brief Wrapper agent to use LocationCluster
 @author Chieh-Yih Wan (UXR, Intel Labs), Dennis D Matthews (initial Java port)
 */
@interface LocationClusterAgent : NSObject {
 @public
  int ClusterAgentID_;
  LocationCluster *_locClusterp_;
  NavPoint *_prevPointp_;
  int beginCnt_;
  int stayCnt_;
  int pauseCnt_;
  int travelCnt_;
  int unknownCnt_;
  /**
   @brief Total duration in seconds from last query, used to determine whether the current cluster is a new cluster
   */
  int _prevTotalDuration_;
  /**
   @brief Duration since last visit to the same cluster
   */
  int _durationSinceLastVisit_;
  boolean NEW_CLUSTER_;
  /**
   @brief Last cluster ID
   */
  long64 _preClusterID_;
  double distanceToPrePointKM_;
  double speedFromLastPointMPH_;
  /**
   @brief Track the run-time cluster id within the clustering algorithm
   */
  long64 oldClusterID_;
}

- (instancetype)initWithInt:(int)NewID
      withClusterParameters:(ClusterParameters *)newClusterParams;

- (instancetype)init;

/**
 @brief Set the minimum time for the clustering algorithm to transition a cluster from PAUSE to STAY.
 @param minutes Number of minutes in PAUSE state before transition into STAY
 @param samplingInterval Sampling interval (in seconds) of the location
 */
- (void)SetDwellTimeMinutesWithDouble:(double)minutes
                              withInt:(int)samplingInterval;

/**
 @brief Set the minimum time (independent of sampling interval) for the clustering algorithm to transition a cluster from PAUSE to STAY.
 Use this method if the location updates is irregular or not consistent.
 @param minutes Number of minutes in PAUSE state before transition into STAY
 */
- (void)SetDwellTimeMinutesForVariableLocationSamplingWithInt:(int)minutes;

/**
 @brief Enable/disable variable location sampling mode in the clustering algorithm.
 The mode can be switched dynamically at run-time.
 @param enable True to enable, false to disable
 */
- (void)SetVariableLocationSamplingModeWithBoolean:(boolean)enable;

/**
 @brief Maximize the hysteresis effect for the clustering algorithm to transition a cluster from PAUSE to STAY.
 */
- (void)SetMaxTravelHysteresis;

/**
 @brief Set the maximum cluster size (radius) in miles
 @param radius in miles
 */
- (void)SetMaxClusterRadiusInMilesWithDouble:(double)radius;

/**
 @brief Set the maximum size (radius in miles) of a semantic place
 @param radius in miles
 */
- (void)SetMaxPlaceRadiusInMilesWithDouble:(double)radius;

/**
 @brief Set the maximum p-2-p distance threshold in meters to be included in a cluster.
 @param distance in meters
 */
- (void)SetPointToPointDistanceThresholdMetersWithDouble:(double)distance;

/**
 @brief Enable/Disable sparse tracking mode that clusters based on sparse location data as opposed to high frequency / continuous location updates
 @param enable true to enable sparse tracking, false to disable it
 */
- (void)SetSparseTrackingModeToWithBoolean:(boolean)enable;

/**
 @brief Check if the run-time cluster has changed since last checked
 @return true if cluster changed, otherwise false
 */
- (boolean)isClusterChanged;

/**
 @brief Check if the place user stays has changed since last checked
 @return true if place changes, otherwise false
 */
- (boolean)placeHasChanged;

- (long64)getClusterID;

/**
 @brief Add a GPS data point into the cluster, automatically calculate speed from previous navigation point.
 @param Lat Latitude
 @param Long Longitude
 @param Accuracy Accuracy in meters
 @param TimeStamp time-stamp in epoch time (seconds)
 @return 
 */
- (boolean)AddGPSDataWithDouble:(double)Lat
                      withDouble:(double)Long
                      withDouble:(double)Accuracy
                        withLong:(long64)TimeStamp;

/**
 @brief Add a GPS data point with speed into the cluster
 @param Lat Latitude
 @param Long Longitude
 @param Accuracy Accuracy in meters
 @param speed Speed in mph
 @param TimeStamp time-stamp in epoch time (seconds)
 @return 
 */
- (boolean)AddGPSDataWithDouble:(double)Lat
                      withDouble:(double)Long
                      withDouble:(double)Accuracy
                      withDouble:(double)speed
                        withLong:(long64)TimeStamp;

/**
 @brief Add a GPS data point with speed (m/s) into the cluster
 @param Lat Latitude
 @param Long Longitude
 @param Accuracy Accuracy in meters
 @param speed Speed in m/s
 @param TimeStamp time-stamp in epoch time (seconds)
 @return 
 */
- (boolean)AddGPSDataSpeedWithDouble:(double)Lat
                           withDouble:(double)Long
                           withDouble:(double)Accuracy
                           withDouble:(double)speed
                             withLong:(long64)TimeStamp;

- (void)ForceEndCluster;

/**
 @brief Retrieve the state of the current cluster
 @return Current classified state of the cluster
 */
- (CLUSTER_STATE *)GetCurrentClusterState;

/**
 @brief For debugging - dump all up-to-date internal states into a string
 @param timestamp Current time stamp in epoch seconds
 @return A log message
 */
- (NSString *)DumpCurrentClusterWithLong:(long64)timestamp;

/**
 @brief Get the newly added duration of the cluster in seconds since the last visit to the cluster
 @return 
 */
- (int)GetClusterDurationSinceLastVisit;

/**
 @brief Get the total duration of current cluster since forming in seconds
 @return Time in seconds
 */
- (int)GetClusterTotalDuration;

/**
 @brief Set the minimum speed in mph for the clustering algorithm to consider the state of a cluster as TRAVEL.
 @param speed Speed in mph.
 */
- (void)SetTravelSpeedThresholdWithDouble:(double)speed;

/**
 @brief Set the sliding window size for the clustering algorithm to consider the state of a cluster as TRAVEL.
 @param winSize Window size
 */
- (void)SetHysteresisWindowWithInt:(int)winSize;

/**
 @brief Set the maximum cluster size(radius) in miles
 @param radius Radius in miles
 */
- (void)SetMaxClusterRadiusWithDouble:(double)radius;

/**
 @brief Set the maximum p-2-p distance threshold in meters to be included in a cluster.
 @param distance Length in meters
 */
- (void)SetDeltaDistanceThresholdWithDouble:(double)distance;

/**
 @brief Enable/Disable sparse tracking mode that clusters based on sparse location data as opposed to high frequency / continuous location updates
 @param enable True to enable, false to disable
 */
- (void)SetSparseTrackingModeWithBoolean:(boolean)enable;

/**
 @brief Retrieve the unique ID of the current cluster
 @return Unique identifier
 */
- (long64)GetClusterID;

/**
 @brief Retrieve the current location using the centroid coordinates
 @return GPS coordinates of the centroid
 */
- (NavPoint *)GetCurrentLocation;

/**
 @brief Retrieve the current cluster radius
 @return Radius in miles
 */
- (double)GetClusterRadius;

/**
 @brief Set the maximum in-cluster roaming radius(miles)
 @param radius
 */
- (void)SetMaxInClusterRoamingRadiusWithDouble:(double)radius;

/**
 @brief Set the minimum dwell time for the clustering algorithm to consider the state of a cluster as STAY.
 @param min Time in minutes
 */
- (void)SetClusterStagnancyTimeMinutesWithInt:(int)min;

/**
 @brief Get speed calculated from the last 2 points added to the cluster agent.
 @return Speed in mph.
 */
- (double)GetSpeedFromLast2Points;

/**
 @brief Calculate the distance in KM to the previous point added into the cluster agent.
 @return Distance in km.
 */
- (double)GetDistanceToPrevPoint;

- (int)getClusterAgentID;

- (double)GetClusterStateConfidence;

- (void)copyAllFieldsTo:(LocationClusterAgent *)other;

@end

__attribute__((always_inline)) inline void LocationClusterAgent_init() {}

//J2OBJC_FIELD_SETTER(LocationClusterAgent, _locClusterp_, LocationCluster *)
//J2OBJC_FIELD_SETTER(LocationClusterAgent, _prevPointp_, NavPoint *)

typedef LocationClusterAgent ComIntelWearablePlatformTimeiqPlacesModulesVisitsmoduleAlgsLocationClusterAgent;

#endif // _LocationClusterAgent_H_
