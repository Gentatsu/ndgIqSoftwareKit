//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/places/modules/visitsmodule/algs/VisitWifiDetectorImpl.java
//

#ifndef _VisitWifiDetectorImpl_H_
#define _VisitWifiDetectorImpl_H_

#import "NSNumber+JavaAPI.h"
@class TSOCoordinate;
@class Visit;
@class WifiScan;
@class WifiSimilarityAlg;
@protocol ILocationData;
@protocol IVisitListener;
#import "JBArrayList.h"

#import "JB.h"
#include "IVisitDetectorImpl.h"

#define VisitWifiDetectorImpl_EndVisitByWeakCounts 3
#define VisitWifiDetectorImpl_MinVisitScans 5
#define VisitWifiDetectorImpl_SameVisitTimeDiff 10
#define VisitWifiDetectorImpl_ShortVisitTime 15
#define VisitWifiDetectorImpl_ZeroLevel -100.0
#define VisitWifiDetectorImpl_windowLength 10

@interface VisitWifiDetectorImpl : NSObject < IVisitDetectorImpl > {
 @public
  ArrayList* m_listeners_;
  int SameVisitMaxDistance_;
  /**
   @brief A working visit - notice, the visit may be in different  internal stages: developing, start visit reported, end visit reported.
   */
  Visit *currentVisit_;
  /**
   @brief Collection of all visits found so far TODO - persistency
   */
  ArrayList* visits_;
  /**
   @brief The actual algorithm which collects scans and produces similarity
   */
  WifiSimilarityAlg *scans_;
  /**
   @brief The location which should be associated with the current visit
   */
  id<ILocationData> lastFuseLocation_;
  /**
   @brief See VisitWifiDetectorImpl#EndVisitByWeakCounts
   */
  int countWeakMatch_;
  /**
   @brief used for simulation mode.
   The time stamp is received from the Wifi scan parameters
   */
  long64 lastTimeStamp_;
  Visit *coldVisit_;
}

/**
 @brief Handle wifi scan There is no active visit VisitWifiDetectorImpl#currentVisit - create one with initial signature
 @param wifiScan
 */
- (void)onWifiRecieveWithWifiScan:(WifiScan *)wifiScan;

- (long64)timeDiffInMinutesWithLong:(long64)t1
                          withLong:(long64)t2;

- (boolean)wasVisitBeginReported;

- (void)resetColdVisit;

- (void)freezeVisit;

- (void)handleColdVisit;

/**
 @brief New location data is used to update the current visit or to save for next visit.
 Current visit is updated only if it has not been updated yet.
 @param fuseLocation
 */
- (void)onLocationRecieveWithILocationData:(id<ILocationData>)fuseLocation;

- (void)registerVisitListenerWithIVisitListener:(id<IVisitListener>)listener;

- (ArrayList*)getVisitListeners;

- (void)unregisterVisitListenerWithIVisitListener:(id<IVisitListener>)listener;

- (ArrayList*)getVisits;

- (ArrayList*)cleanShortVisits;

- (Visit *)getCurrentVisit;

/**
 @brief After VisitWifiDetectorImpl#MinVisitScans counts, the visit is reported as begun and is added to the visits list.
 <br> Registered listeres are called
 */
- (void)reportVisitBeginWithVisit:(Visit *)newVisit;

/**
 @brief Visit is closed either when a scan with No Similarity was recieved or after EndVisitByWeakCounts was reported.
 <br> Registered listeres are called
 */
- (void)reportVisitEndWithVisit:(Visit *)closedVisit;

- (void)handleWeakMatch;

- (void)rePlayVisits;

- (void)setCurrentTimeWithLong:(long64)currentTime;

- (double)calculateDistanceWithTSOCoordinate:(TSOCoordinate *)loc1
                            withTSOCoordinate:(TSOCoordinate *)loc2;

- (double)toRadiansWithJBDouble:(JBDouble *)degree;

- (instancetype)init;

- (void)copyAllFieldsTo:(VisitWifiDetectorImpl *)other;

@end

FOUNDATION_EXPORT BOOL VisitWifiDetectorImpl_initialized;
J2OBJC_STATIC_INIT(VisitWifiDetectorImpl)

//J2OBJC_FIELD_SETTER(VisitWifiDetectorImpl, m_listeners_, ArrayList*)
//J2OBJC_FIELD_SETTER(VisitWifiDetectorImpl, currentVisit_, Visit *)
//J2OBJC_FIELD_SETTER(VisitWifiDetectorImpl, visits_, ArrayList*)
//J2OBJC_FIELD_SETTER(VisitWifiDetectorImpl, scans_, WifiSimilarityAlg *)
//J2OBJC_FIELD_SETTER(VisitWifiDetectorImpl, lastFuseLocation_, id<ILocationData>)
//J2OBJC_FIELD_SETTER(VisitWifiDetectorImpl, coldVisit_, Visit *)

J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, ShortVisitTime, int)

J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, SameVisitTimeDiff, int)

FOUNDATION_EXPORT NSString *VisitWifiDetectorImpl_TAG_;
J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, TAG_, NSString *)

FOUNDATION_EXPORT int VisitWifiDetectorImpl_TOLERANCE_;
J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, TOLERANCE_, int)
//J2OBJC_STATIC_FIELD_REF_GETTER(VisitWifiDetectorImpl, TOLERANCE_, int)

J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, MinVisitScans, int)

J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, ZeroLevel, double)

J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, windowLength, int)

J2OBJC_STATIC_FIELD_GETTER(VisitWifiDetectorImpl, EndVisitByWeakCounts, int)

typedef VisitWifiDetectorImpl ComIntelWearablePlatformTimeiqPlacesModulesVisitsmoduleAlgsVisitWifiDetectorImpl;

#endif // _VisitWifiDetectorImpl_H_
