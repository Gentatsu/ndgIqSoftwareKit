//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/places/repo/PlaceRepoImpl.java
//

#ifndef _PlaceRepoImpl_H_
#define _PlaceRepoImpl_H_

@class ClassFactory;
@class DetectedPlace;
@class ExternalPlacesModule;
#import "NSNumber+JavaAPI.h"
@class ManualPlace;
@class ManualPlaceSource;
@class PlaceID;
@class Result;
@class ResultData;
@class SemanticDetectedPlace;
@class SemanticKey;
@class TSOPlace;
@protocol IApiUsageUtil;
@protocol IAuthorizationManager;
@protocol IGenericDaoImpl;
@protocol IInternalMessageEngine;
@protocol IMessage;
@protocol IPlacesEngine;
@protocol ITSOLogger;
#import "JBHashtable.h"

#import "JB.h"
#include "IMessageListener.h"
#include "IPlaceListener.h"
#include "IPlaceRepoInternal.h"

/**
 @brief Created by orencoh2 on 7/13/15.
 */
@interface PlaceRepoImpl : NSObject < IPlaceRepoInternal, IMessageListener > {
 @public
  id<ITSOLogger> m_logger_;
  ExternalPlacesModule *m_externalPlacesModule_;
  id<IGenericDaoImpl> m_detectedPlaceDao_;
  id<IGenericDaoImpl> m_semanticDetectionDao_;
  id<IGenericDaoImpl> m_manualPlaceDao_;
  id<IAuthorizationManager> m_authMgr_;
  id<IPlacesEngine> m_placesEngine_;
  id<IInternalMessageEngine> m_internalMsgHandler_;
  id<IApiUsageUtil> m_apiUsageUtil_;
  HashMap* m_semanticKeyToId_;
  HashMap* m_placeIdToSemanticKey_;
  PlaceID *m_autoDetectedHome_;
  PlaceID *m_autoDetectedWork_;
  id m_lockObject_;
  int counter_;
}

/**
 @brief Constructor
 */
- (instancetype)init;

- (instancetype)initWithClassFactory:(ClassFactory *)factory;

/**
 @brief Constructor
 @param detectedPlaceDao
 @param semanticDetectionDao
 @param manualPlaceDao
 @param authMgr
 @param placesEngine
 @param logger
 @param externalPlacesModule
 */
- (instancetype)initWithIGenericDaoImpl:(id<IGenericDaoImpl>)detectedPlaceDao
                    withIGenericDaoImpl:(id<IGenericDaoImpl>)semanticDetectionDao
                    withIGenericDaoImpl:(id<IGenericDaoImpl>)manualPlaceDao
              withIAuthorizationManager:(id<IAuthorizationManager>)authMgr
                      withIPlacesEngine:(id<IPlacesEngine>)placesEngine
                         withITSOLogger:(id<ITSOLogger>)logger
               withExternalPlacesModule:(ExternalPlacesModule *)externalPlacesModule
             withIInternalMessageEngine:(id<IInternalMessageEngine>)internalMessageEngine
                      withIApiUsageUtil:(id<IApiUsageUtil>)apiUsageUtil;

- (void)registerExternalPlacesListener;

- (void)populateMaps;

- (void)onReceiveWithIMessage:(id<IMessage>)message;

- (void)switchMapsWithJavaUtilMap:(HashMap*)updatedSemanticKeyToId
                  withJavaUtilMap:(HashMap*)updatedPlaceIdToSemanticKey
              withInteger:(Integer *)mapsStateId;

- (void)updatePlaceOnMapsWithJavaUtilMap:(HashMap*)updatedSemanticKeyToId
                         withJavaUtilMap:(HashMap*)updatedPlaceIdToSemanticKey
                         withSemanticKey:(SemanticKey *)semanticKey
                             withPlaceID:(PlaceID *)semanticPlaceId;

- (SemanticKey *)generateSemanticKeyWithTSOPlace:(TSOPlace *)place;

- (ResultData *)addPlaceWithTSOPlace:(TSOPlace *)place;

- (ResultData *)addPlaceWithTSOPlace:(TSOPlace *)place
                     withSemanticKey:(SemanticKey *)semanticKey;

- (ResultData *)addPlaceWithTSOPlace:(TSOPlace *)place
           withManualPlaceSource:(ManualPlaceSource *)manualPlaceSource;

- (ResultData *)addPlaceWithTSOPlace:(TSOPlace *)place
                     withSemanticKey:(SemanticKey *)semanticKey
           withManualPlaceSource:(ManualPlaceSource *)manualPlaceSource;

- (Result *)removePlaceWithPlaceID:(PlaceID *)placeID;

/**
 @brief Returns a list of all places either user-defined or SDK detected that has semantic information.
 Usually used for display purposes to the user using the semantic information. Returned list is also de-duplicated from places containing the same semantic tag by priority ( external place > semantic detected place )
 @return List of places
 */
- (ResultData *)getAllPlaces;

- (ResultData *)getPlaceWithPlaceID:(PlaceID *)placeId;

/**
 @brief Returns a specific place idetified by it's id
 @param id
 @return Place object or null if not found
 */
- (TSOPlace *)getPlaceInternalWithPlaceID:(PlaceID *)id_;

- (ResultData *)getPlaceIdWithSemanticKey:(SemanticKey *)semanticKey;

- (SemanticKey *)getSemanticKeyWithPlaceID:(PlaceID *)placeId;

- (PlaceID *)getSemanticPlaceIdWithPlaceID:(PlaceID *)placeId;

- (PlaceID *)getPlaceIdInternalWithSemanticKey:(SemanticKey *)semanticKey;

- (ManualPlace *)getExternalPlaceByIdWithPlaceID:(PlaceID *)id_;

- (SemanticDetectedPlace *)getSemanticDetectedPlaceByIdWithPlaceID:(PlaceID *)id_;

- (DetectedPlace *)getDetectedPlaceByIdWithPlaceID:(PlaceID *)id_;

/**
 @param id
 @return 
 */
- (TSOPlace *)convertExternalPlaceByIdWithPlaceID:(PlaceID *)id_;

/**
 @param id
 @return 
 */
- (TSOPlace *)convertSemanticPlaceByIdWithPlaceID:(PlaceID *)id_;

/**
 @param id
 @return 
 */
- (TSOPlace *)convertDetectedPlaceByIdWithPlaceID:(PlaceID *)id_;

/**
 @return 
 */
- (NSString *)getUserId;

- (TSOPlace *)convertManualPlaceWithManualPlace:(ManualPlace *)place;

/**
 @param place
 */
- (TSOPlace *)convertSemanticPlaceWithSemanticDetectedPlace:(SemanticDetectedPlace *)place;

/**
 @param place
 */
- (TSOPlace *)convertDetectedPlaceWithDetectedPlace:(DetectedPlace *)place;

- (void)copyAllFieldsTo:(PlaceRepoImpl *)other;

@end

FOUNDATION_EXPORT BOOL PlaceRepoImpl_initialized;
J2OBJC_STATIC_INIT(PlaceRepoImpl)

//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_logger_, id<ITSOLogger>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_externalPlacesModule_, ExternalPlacesModule *)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_detectedPlaceDao_, id<IGenericDaoImpl>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_semanticDetectionDao_, id<IGenericDaoImpl>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_manualPlaceDao_, id<IGenericDaoImpl>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_authMgr_, id<IAuthorizationManager>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_placesEngine_, id<IPlacesEngine>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_internalMsgHandler_, id<IInternalMessageEngine>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_apiUsageUtil_, id<IApiUsageUtil>)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_semanticKeyToId_, HashMap*)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_placeIdToSemanticKey_, HashMap*)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_autoDetectedHome_, PlaceID *)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_autoDetectedWork_, PlaceID *)
//J2OBJC_FIELD_SETTER(PlaceRepoImpl, m_lockObject_, id)

FOUNDATION_EXPORT NSString *PlaceRepoImpl_TAG_;
J2OBJC_STATIC_FIELD_GETTER(PlaceRepoImpl, TAG_, NSString *)

typedef PlaceRepoImpl ComIntelWearablePlatformTimeiqPlacesRepoPlaceRepoImpl;

@interface PlaceRepoImpl_PlaceIdKey : NSObject {
 @public
  PlaceID *placeId_;
}

/**
 @brief Constructor
 @param placeId
 */
- (instancetype)initWithPlaceID:(PlaceID *)placeId;

- (boolean)isEqual:(id)o;

- (NSUInteger)hash;

- (void)copyAllFieldsTo:(PlaceRepoImpl_PlaceIdKey *)other;

@end

__attribute__((always_inline)) inline void PlaceRepoImpl_PlaceIdKey_init() {}

//J2OBJC_FIELD_SETTER(PlaceRepoImpl_PlaceIdKey, placeId_, PlaceID *)

@interface PlaceRepoImpl_$1 : NSObject < IPlaceListener > {
 @public
  PlaceRepoImpl *this$0_;
}

- (void)onDetectionFinished;

- (instancetype)initWithPlaceRepoImpl:(PlaceRepoImpl *)outer$;

@end

__attribute__((always_inline)) inline void PlaceRepoImpl_$1_init() {}

//J2OBJC_FIELD_SETTER(PlaceRepoImpl_$1, this$0_, PlaceRepoImpl *)

#endif // _PlaceRepoImpl_H_
