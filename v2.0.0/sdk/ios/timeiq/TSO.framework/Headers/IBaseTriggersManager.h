//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/triggers/IBaseTriggersManager.java
//

#ifndef _IBaseTriggersManager_H_
#define _IBaseTriggersManager_H_

#import "JBEnumSet.h"
@protocol IManagersListener;
@protocol ITriggerInner;
@protocol ITriggerLifeCycleListener;
#import "JBHashSet.h"

#import "JB.h"

/**
 @brief Created by smoradof on 5/3/2015.
 */
@protocol IBaseTriggersManager < NSObject >

- (boolean)addTriggerWithITriggerInner:(id<ITriggerInner>)trigger;

- (void)startWithIManagersListener:(id<IManagersListener>)triggerListener
     withITriggerLifeCycleListener:(id<ITriggerLifeCycleListener>)triggerLifeCycleListener;

- (boolean)removeTriggerWithITriggerInner:(id<ITriggerInner>)trigger;

- (void)removeAllTriggersWithNSString:(NSString *)listenerId;

- (id)getTriggerWithNSString:(NSString *)triggerId;

- (Set*)getTriggersWithNSString:(NSString *)listenerId
                              withEnumSet:(EnumSet *)triggerStatuses;

- (boolean)setTriggerAsEndedWithITriggerInner:(id<ITriggerInner>)trigger;

- (void)onDestroy;

/**
 @brief Should be called only AFTER the trigger was removed from storage !!
 <BR> This is because the manager should unregister if there is no trigger left
 @param trigger
 */
- (void)cancelTriggerWithITriggerInner:(id<ITriggerInner>)trigger;

/**
 @brief For debug only
 */
- (Set*)getAllTriggersWithNSString:(NSString *)listenerId;

@end

__attribute__((always_inline)) inline void IBaseTriggersManager_init() {}

#define ComIntelWearablePlatformTimeiqTriggersIBaseTriggersManager IBaseTriggersManager

#endif // _IBaseTriggersManager_H_
