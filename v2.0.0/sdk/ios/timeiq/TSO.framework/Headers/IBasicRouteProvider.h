//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/internalApi/route/IBasicRouteProvider.java
//

#ifndef _IBasicRouteProvider_H_
#define _IBasicRouteProvider_H_

#import "NSNumber+JavaAPI.h"
@class MotType;
@class ResultData;
@class TSOCoordinate;

#import "JB.h"

#define IBasicRouteProvider_DESTINATION_CACHE_RADIUS_THRESHOLD_METERS 50.0f
#define IBasicRouteProvider_ORIGIN_CACHE_RADIUS_THRESHOLD_METERS 250.0f

/**
 @brief Means to get TTL or ETA routes
 */
@protocol IBasicRouteProvider < NSObject >

/**
 @brief Get a TTL route with specific Thresholds
 @param origin the origin location of the route
 @param destination the origin location of the route
 @param arrivalTime the desired arrival time to the destination
 @param motType the means of transport to get to the destination
 @param prioritize if true - the request will have higher priority
 @param originCacheRadiusThreshold the radius threshold of the origin to be used for cache
 @param destinationCacheRadiusThreshold the radius threshold of the destination to be used for cache
 @param timeCacheThresholdMillis the maximum time difference in millis from the departure time to be used for cache
 @return a  for the route
 */
- (ResultData *)getTTLWithTSOCoordinate:(TSOCoordinate *)origin
                      withTSOCoordinate:(TSOCoordinate *)destination
                           withNSString:(NSString *)arrivalTime
                        withMotType:(MotType *)motType
                    withJBBoolean:(JBBoolean *)prioritize
                              withFloat:(float)originCacheRadiusThreshold
                              withFloat:(float)destinationCacheRadiusThreshold
                               withLong:(long64)timeCacheThresholdMillis;

/**
 @brief Get an ETA route with specific Thresholds
 @param origin the origin location of the route
 @param destination the origin location of the route
 @param departureTime the desired departure time from the origin
 @param motType the means of transport to get to the destination
 @param prioritize if true - the request will have higher priority
 @param originCacheRadiusThreshold the radius threshold of the origin to be used for cache
 @param destinationCacheRadiusThreshold the radius threshold of the destination to be used for cache
 @param timeCacheThresholdMillis the maximum time difference in millis from the arrival time to be used for cache
 @return a  for the route
 */
- (ResultData *)getETAWithTSOCoordinate:(TSOCoordinate *)origin
                      withTSOCoordinate:(TSOCoordinate *)destination
                           withNSString:(NSString *)departureTime
                        withMotType:(MotType *)motType
                    withJBBoolean:(JBBoolean *)prioritize
                              withFloat:(float)originCacheRadiusThreshold
                              withFloat:(float)destinationCacheRadiusThreshold
                               withLong:(long64)timeCacheThresholdMillis;

/**
 @brief Get a TTL route with default Thresholds
 @param origin the origin location of the route
 @param destination the origin location of the route
 @param arrivalTime the desired arrival time to the destination
 @param motType the means of transport to get to the destination
 @param prioritize if true - the request will have higher priority
 @return a  for the route
 */
- (ResultData *)getTTLWithTSOCoordinate:(TSOCoordinate *)origin
                      withTSOCoordinate:(TSOCoordinate *)destination
                           withNSString:(NSString *)arrivalTime
                        withMotType:(MotType *)motType
                    withJBBoolean:(JBBoolean *)prioritize;

/**
 @brief Get an ETA route with default Thresholds
 @param origin the origin location of the route
 @param destination the origin location of the route
 @param departureTime the desired departure time from the origin
 @param motType the means of transport to get to the destination
 @param prioritize if true - the request will have higher priority
 @return a  for the route
 */
- (ResultData *)getETAWithTSOCoordinate:(TSOCoordinate *)origin
                      withTSOCoordinate:(TSOCoordinate *)destination
                           withNSString:(NSString *)departureTime
                        withMotType:(MotType *)motType
                    withJBBoolean:(JBBoolean *)prioritize;

@end

@interface IBasicRouteProvider : NSObject

@end

FOUNDATION_EXPORT BOOL IBasicRouteProvider_initialized;
J2OBJC_STATIC_INIT(IBasicRouteProvider)

J2OBJC_STATIC_FIELD_GETTER(IBasicRouteProvider, ORIGIN_CACHE_RADIUS_THRESHOLD_METERS, float)

J2OBJC_STATIC_FIELD_GETTER(IBasicRouteProvider, DESTINATION_CACHE_RADIUS_THRESHOLD_METERS, float)

FOUNDATION_EXPORT long64 IBasicRouteProvider_TIME_CACHE_THRESHOLD_MILLIS_;
J2OBJC_STATIC_FIELD_GETTER(IBasicRouteProvider, TIME_CACHE_THRESHOLD_MILLIS_, long64)

#define ComIntelWearablePlatformTimeiqInternalApiRouteIBasicRouteProvider IBasicRouteProvider

#endif // _IBasicRouteProvider_H_
