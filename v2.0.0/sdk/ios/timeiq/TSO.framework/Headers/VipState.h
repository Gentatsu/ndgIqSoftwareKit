//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/places/modules/visitinplacemodule/state/VipState.java
//

#ifndef _VipState_H_
#define _VipState_H_

@class Coord;
@class IPC;
#import "JBBufferedWriter.h"
@class LocationData;
@class PlaceID;
@class PolicyHistoryInfo;
@class SensedPlace;
@class VipStateType;
@class Visit;
@class VisitInPlaceModule;
@class WifiScan;
@protocol ILocationData;
@protocol IState;
#import "JBArrayList.h"

#import "JB.h"

#define VipState_MAX_WIFI_LOOP 3

@interface VipState : NSObject {
 @public
  NSString *id__;
  id<IState> currentState_;
  ArrayList* stateHistory_;
  VisitInPlaceModule *vipModule_;
  double MaxDistanceToCenter_;
  double MaxDistanceToEnvelope_;
  LocationData *lastFuse_;
  PolicyHistoryInfo *lastPolicyChange_;
  long64 LowTImeInterval_;
  long64 ExtremelyTImeInterval_;
  SensedPlace *sensedPlace_;
  PlaceID *placeId_;
  long64 distanceToCenter_;
  long64 distanceFromEnvelope_;
  IPC *ipc_;
  Visit *currentVisit_;
  long64 visitDistanceToCenter_;
  boolean useVisits_;
  IPC *wifiIpc_;
  long64 wifiTimestamp_;
  int bestWifiMatch_;
  boolean verbose_;
  /**
   @brief Constructor
   @param vipModule
   @param c
   @param timestamp
   */
  BufferedWriter *writer_;
  int lastWifiMatchingNum_;
  int wifiLoop_;
}

- (instancetype)initWithVisitInPlaceModule:(VisitInPlaceModule *)vipModule
                           withSensedPlace:(SensedPlace *)c
                                  withLong:(long64)timestamp;

- (void)setupDetailedWifiLog;

- (void)updatePolicyWithPolicyHistoryInfo:(PolicyHistoryInfo *)policy;

- (void)updateLocationWithILocationData:(id<ILocationData>)location;

- (void)updateWifiWithWifiScan:(WifiScan *)wifiScan;

- (void)resetWifi;

- (void)updateVisitStartWithVisit:(Visit *)visit
                         withLong:(long64)timestamp;

- (void)visitStateChangeWithNSString:(NSString *)from
                           withVisit:(Visit *)visit
                            withLong:(long64)timestamp
                        withNSString:(NSString *)visitEvent;

- (void)updateVisitEndWithVisit:(Visit *)visit
                       withLong:(long64)timestamp;

- (void)updateTimeWatchWithLong:(long64)timestamp;

- (void)changeStateWithIState:(id<IState>)previouState
                   withIState:(id<IState>)newState
                     withLong:(long64)timestamp;

- (IPC *)updateIpcByFuseAccuracyWithIPC:(IPC *)ipc
                               withLocationData:(LocationData *)locationData;

- (boolean)isHighAccuracyWithFloat:(float)accuracy;

- (long64)timeFromPrevFuseWithLocationData:(LocationData *)locationData;

- (boolean)isStationaryWithLocationData:(LocationData *)locationData;

- (IPC *)decreaseIpcWithIPC:(IPC *)ipc;

- (IPC *)increaseIpcWithIPC:(IPC *)ipc;

- (id<IState>)getCurrentState;

- (IPC *)calcIpcFromCoordWithCoord:(Coord *)coord;

- (IPC *)calcIpcFromWifiWithWifiScan:(WifiScan *)wifiScan;

- (IPC *)calcIpcFromVisitWithVisit:(Visit *)visit;

- (void)displayStateHistory;

- (SensedPlace *)getSensedPlace;

- (void)forceStateWithVipStateType:(VipStateType *)type
                              withLong:(long64)timestamp
                           withIPC:(IPC *)ipc;

- (void)printFromFuseWithIState:(id<IState>)currentState
                     withIState:(id<IState>)newState
                       withLong:(long64)distance
                    withIPC:(IPC *)ipc;

- (void)printFromWifiWithIState:(id<IState>)currentState
                     withIState:(id<IState>)newState
                        withInt:(int)matchingWifi
                    withIPC:(IPC *)ipc;

- (void)printVisitUpdateWithNSString:(NSString *)from
                          withIState:(id<IState>)currentState
                          withIState:(id<IState>)newState
                            withLong:(long64)visitDistanceToCenter
                         withIPC:(IPC *)ipc
                        withNSString:(NSString *)visitEvent;

- (void)printStateWithNSString:(NSString *)from
                    withIState:(id<IState>)currentState
                    withIState:(id<IState>)newState
                  withNSString:(NSString *)metric
                   withIPC:(IPC *)ipc
                  withNSString:(NSString *)visitEvent;

- (void)copyAllFieldsTo:(VipState *)other;

@end

__attribute__((always_inline)) inline void VipState_init() {}

//J2OBJC_FIELD_SETTER(VipState, id__, NSString *)
//J2OBJC_FIELD_SETTER(VipState, currentState_, id<IState>)
//J2OBJC_FIELD_SETTER(VipState, stateHistory_, ArrayList*)
//J2OBJC_FIELD_SETTER(VipState, vipModule_, VisitInPlaceModule *)
//J2OBJC_FIELD_SETTER(VipState, lastFuse_, LocationData *)
//J2OBJC_FIELD_SETTER(VipState, lastPolicyChange_, PolicyHistoryInfo *)
//J2OBJC_FIELD_SETTER(VipState, sensedPlace_, SensedPlace *)
//J2OBJC_FIELD_SETTER(VipState, placeId_, PlaceID *)
//J2OBJC_FIELD_SETTER(VipState, ipc_, IPC *)
//J2OBJC_FIELD_SETTER(VipState, currentVisit_, Visit *)
//J2OBJC_FIELD_SETTER(VipState, wifiIpc_, IPC *)
//J2OBJC_FIELD_SETTER(VipState, writer_, BufferedWriter *)

J2OBJC_STATIC_FIELD_GETTER(VipState, MAX_WIFI_LOOP, int)

FOUNDATION_EXPORT NSString *VipState_FROM_FUSE_;
J2OBJC_STATIC_FIELD_GETTER(VipState, FROM_FUSE_, NSString *)

FOUNDATION_EXPORT NSString *VipState_FROM_WIFI_;
J2OBJC_STATIC_FIELD_GETTER(VipState, FROM_WIFI_, NSString *)

FOUNDATION_EXPORT NSString *VipState_FROM_VISIT_;
J2OBJC_STATIC_FIELD_GETTER(VipState, FROM_VISIT_, NSString *)

FOUNDATION_EXPORT NSString *VipState_WIFI_FILE_PREFIX_;
J2OBJC_STATIC_FIELD_GETTER(VipState, WIFI_FILE_PREFIX_, NSString *)

typedef VipState ComIntelWearablePlatformTimeiqPlacesModulesVisitinplacemoduleStateVipState;

#endif // _VipState_H_
