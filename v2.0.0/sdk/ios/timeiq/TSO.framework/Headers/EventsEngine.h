//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/events/EventsEngine.java
//

#ifndef _EventsEngine_H_
#define _EventsEngine_H_

@class BeManager;
@class CalendarEventsManager;
@class EventContext;
@class EventIdManager;
@class EventTriggerType;
@class EventsAudit;
@class EventsManager;
@class EventsPersistenceUtil;
@class Result;
@class ResultCode;
@class ResultData;
@class TSOEventType;
@class TSOEventsSync;
@class UserActionType;
@protocol IApiUsageUtil;
@protocol ICalendarDetailsProvider;
@protocol IEvent;
@protocol IExternalMessageEngine;
@protocol IInternalMessageEngine;
@protocol IRouteData;
@protocol ISdkDefaultPrefs;
@protocol ITSOEvent;
@protocol ITSOLogger;
@protocol ITSOTimeUtil;
@protocol ITriggersManager;
#import "JBHashSet.h"
#import "JBArrayList.h"
#import "JBHashtable.h"
#import "JBHashSet.h"

#import "JB.h"
#include "IEventsEngine.h"
#include "IEventUpdateListener.h"
#include "ITriggerListener.h"
#import "JBCallable.h"

#define EventsEngine_ONE_DAY 86400000LL
#define EventsEngine_UPDATE_TYPE_DAY_OF_MONTH 2
#define EventsEngine_UPDATE_TYPE_DAY_OF_WEEK 1
#define EventsEngine_UPDATE_TYPE_DURATION 5
#define EventsEngine_UPDATE_TYPE_INFORMATIONAL 6
#define EventsEngine_UPDATE_TYPE_LOCATION 7
#define EventsEngine_UPDATE_TYPE_MONTH_OF_YEAR 3
#define EventsEngine_UPDATE_TYPE_TIME 4
#define EventsEngine_UPDATE_TYPE_UNKNOWN 8

/**
 @brief Created by stzour on 11/05/2015.
 */
@interface EventsEngine : NSObject < IEventsEngine, IEventUpdateListener, ITriggerListener > {
 @public
  BeManager *beManager_;
  CalendarEventsManager *calendarEventsManager_;
  EventsManager *eventsManager_;
  TSOEventsSync *eventsSync_;
  EventsAudit *auditManager_;
  EventIdManager *eventIdManager_;
  id<ICalendarDetailsProvider> calendarDetailsProvider_;
  id<ITriggersManager> triggersManager_;
  EventsPersistenceUtil *persistenceUtil_;
  id<IExternalMessageEngine> msgHandler_;
  id<IInternalMessageEngine> internalMsgHandler_;
  id<ISdkDefaultPrefs> sdkDefaultPrefs_;
  id<ITSOTimeUtil> timeUtil_;
  id<ITSOLogger> logger_;
  id<IApiUsageUtil> apiUsageUtil_;
  HashMap* recurrentEventsMapping_;
  Set* userActionOptionSet_;
}

- (instancetype)init;

- (instancetype)initWithBeManager:(BeManager *)beManager
        withCalendarEventsManager:(CalendarEventsManager *)calendarEventsManager
                withEventsManager:(EventsManager *)eventsManager
                withTSOEventsSync:(TSOEventsSync *)tsoEventsSync
                  withEventsAudit:(EventsAudit *)eventsAudit
               withEventIdManager:(EventIdManager *)eventIdManager
        withEventsPersistenceUtil:(EventsPersistenceUtil *)eventsPersistenceUtil
     withICalendarDetailsProvider:(id<ICalendarDetailsProvider>)calendarDetailsProvider
             withITriggersManager:(id<ITriggersManager>)triggersManager
       withIExternalMessageEngine:(id<IExternalMessageEngine>)messageEngine
       withIInternalMessageEngine:(id<IInternalMessageEngine>)internalMessageEngine
             withISdkDefaultPrefs:(id<ISdkDefaultPrefs>)sdkDefaultPrefs
                 withITSOTimeUtil:(id<ITSOTimeUtil>)timeUtil
                   withITSOLogger:(id<ITSOLogger>)tsoLogger
                withIApiUsageUtil:(id<IApiUsageUtil>)apiUsageUtil;

- (Result *)addEventWithIEvent:(id<IEvent>)event;

- (ResultCode *)handleAddEventWithIEvent:(id<IEvent>)event
                            withEventContext:(EventContext *)eventContext;

- (ResultData *)getEventWithNSString:(NSString *)eventId;

- (Result *)deleteEventWithNSString:(NSString *)eventId;

- (Result *)deleteEventWithNSString:(NSString *)eventId
                        withBoolean:(boolean)applyToAllInstances;

- (Result *)updateEventWithIEvent:(id<IEvent>)event;

- (Result *)updateEventWithIEvent:(id<IEvent>)event
                      withBoolean:(boolean)applyToAllInstances;

- (ArrayList*)getUpdateTypesWithIEvent:(id<IEvent>)newEvent;

- (ResultData *)getCurrentEventsWithTSOEventType:(TSOEventType *)eventType;

- (ResultData *)getCurrentEventsWithJavaUtilList:(ArrayList*)eventTypes;

- (ResultData *)getEventsByDatesWithTSOEventType:(TSOEventType *)eventType
                                            withLong:(long64)startTimeFrame
                                            withLong:(long64)endTimeFrame;

- (ResultData *)getEventsByDatesWithJavaUtilList:(ArrayList*)calendarsIds
                            withTSOEventType:(TSOEventType *)eventType
                                        withLong:(long64)startTimeFrame
                                        withLong:(long64)endTimeFrame;

- (ResultData *)getEventsByDatesInnerWithJavaUtilList:(ArrayList*)calendarsId
                                 withTSOEventType:(TSOEventType *)eventType
                                             withLong:(long64)startTime
                                             withLong:(long64)endTime;

- (ResultData *)getUserActionOptionsWithNSString:(NSString *)clientEventId;

- (Result *)chosenUserActionWithNSString:(NSString *)eventId
                  withUserActionType:(UserActionType *)userAction;

- (Result *)chosenUserActionWithNSString:(NSString *)eventId
                  withUserActionType:(UserActionType *)userAction
                                withLong:(long64)delayInMillis;

- (void)auditUserChoiceWithNSString:(NSString *)eventId
             withUserActionType:(UserActionType *)userAction
                           withLong:(long64)delayInMillis;

- (boolean)createTimeBasedTriggerWithNSString:(NSString *)clientEventId
                                      withLong:(long64)delayInMillis;

- (void)onTriggeredEventWithITSOEvent:(id<ITSOEvent>)event
             withEventTriggerType:(EventTriggerType *)eventTriggerType
                       withIRouteData:(id<IRouteData>)routeData;

- (ArrayList*)convertEventsListWithJavaUtilList:(ArrayList*)eventsList;

- (id<IEvent>)convertEventWithITSOEvent:(id<ITSOEvent>)tsoEvent;

- (Set*)getUserActions;

- (void)onTriggerWithJavaUtilCollection:(Set*)triggers;

- (NSString *)getParentEventIdWithNSString:(NSString *)eventId;

- (HashMap*)getPersistenceData;

- (Result *)validateEventIdWithNSString:(NSString *)eventId;

- (Result *)validateEventWithIEvent:(id<IEvent>)event;

- (Result *)validateTimesWithLong:(long64)startTime
                         withLong:(long64)endTime;

- (Result *)validateUserActionWithUserActionType:(UserActionType *)userAction;

- (Result *)validateEventTypeWithTSOEventType:(TSOEventType *)eventType;

- (Result *)validateDelayTimeWithLong:(long64)delay;

- (Result *)validateCalendarsListWithJavaUtilList:(ArrayList*)calendarIds
                             withTSOEventType:(TSOEventType *)type;

- (void)copyAllFieldsTo:(EventsEngine *)other;

@end

__attribute__((always_inline)) inline void EventsEngine_init() {}

//J2OBJC_FIELD_SETTER(EventsEngine, beManager_, BeManager *)
//J2OBJC_FIELD_SETTER(EventsEngine, calendarEventsManager_, CalendarEventsManager *)
//J2OBJC_FIELD_SETTER(EventsEngine, eventsManager_, EventsManager *)
//J2OBJC_FIELD_SETTER(EventsEngine, eventsSync_, TSOEventsSync *)
//J2OBJC_FIELD_SETTER(EventsEngine, auditManager_, EventsAudit *)
//J2OBJC_FIELD_SETTER(EventsEngine, eventIdManager_, EventIdManager *)
//J2OBJC_FIELD_SETTER(EventsEngine, calendarDetailsProvider_, id<ICalendarDetailsProvider>)
//J2OBJC_FIELD_SETTER(EventsEngine, triggersManager_, id<ITriggersManager>)
//J2OBJC_FIELD_SETTER(EventsEngine, persistenceUtil_, EventsPersistenceUtil *)
//J2OBJC_FIELD_SETTER(EventsEngine, msgHandler_, id<IExternalMessageEngine>)
//J2OBJC_FIELD_SETTER(EventsEngine, internalMsgHandler_, id<IInternalMessageEngine>)
//J2OBJC_FIELD_SETTER(EventsEngine, sdkDefaultPrefs_, id<ISdkDefaultPrefs>)
//J2OBJC_FIELD_SETTER(EventsEngine, timeUtil_, id<ITSOTimeUtil>)
//J2OBJC_FIELD_SETTER(EventsEngine, logger_, id<ITSOLogger>)
//J2OBJC_FIELD_SETTER(EventsEngine, apiUsageUtil_, id<IApiUsageUtil>)
//J2OBJC_FIELD_SETTER(EventsEngine, recurrentEventsMapping_, HashMap*)
//J2OBJC_FIELD_SETTER(EventsEngine, userActionOptionSet_, Set*)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, ONE_DAY, long64)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_DAY_OF_WEEK, int)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_DAY_OF_MONTH, int)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_MONTH_OF_YEAR, int)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_TIME, int)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_DURATION, int)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_INFORMATIONAL, int)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_LOCATION, int)

J2OBJC_STATIC_FIELD_GETTER(EventsEngine, UPDATE_TYPE_UNKNOWN, int)

FOUNDATION_EXPORT NSString *EventsEngine_TAG_;
J2OBJC_STATIC_FIELD_GETTER(EventsEngine, TAG_, NSString *)

FOUNDATION_EXPORT NSString *EventsEngine_LISTENER_ID_;
J2OBJC_STATIC_FIELD_GETTER(EventsEngine, LISTENER_ID_, NSString *)

FOUNDATION_EXPORT NSString *EventsEngine_ID_SPLITTER_;
J2OBJC_STATIC_FIELD_GETTER(EventsEngine, ID_SPLITTER_, NSString *)

typedef EventsEngine ComIntelWearablePlatformTimeiqEventsEventsEngine;

@interface EventsEngine_$1 : NSObject < Callable > {
 @public
  EventsEngine *this$0_;
  id<IEvent> val$event_;
  EventContext *val$eventContext_;
}

- (ResultCode *)call;

- (instancetype)initWithEventsEngine:(EventsEngine *)outer$
                          withIEvent:(id<IEvent>)capture$0
                    withEventContext:(EventContext *)capture$1;

@end

__attribute__((always_inline)) inline void EventsEngine_$1_init() {}

//J2OBJC_FIELD_SETTER(EventsEngine_$1, this$0_, EventsEngine *)
//J2OBJC_FIELD_SETTER(EventsEngine_$1, val$event_, id<IEvent>)
//J2OBJC_FIELD_SETTER(EventsEngine_$1, val$eventContext_, EventContext *)

#endif // _EventsEngine_H_
