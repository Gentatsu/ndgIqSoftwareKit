//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/api/reminders/BaseReminder.java
//

#ifndef _BaseReminder_H_
#define _BaseReminder_H_

@class BaseReminder_BaseReminderBuilder;
@class ReminderStatus;
@class ReminderType;
@protocol ITrigger;

#import "JB.h"
#include "IReminder.h"

/**
 @brief This class should not be used "as is", the classes that should be used are it's subclasses Created by smoradof on 6/18/2015.
 */
@interface BaseReminder : NSObject < IReminder > {
 @public
  NSString *m_id_;
  ReminderType *m_reminderType_;
  id<ITrigger> m_trigger_;
  ReminderStatus *m_status_;
  long64 m_triggeredTime_;
  long64 m_addedTime_;
}

/**
 @brief Create the reminder using a builder
 @param reminderBuilder the builder that has the input parameters for the reminder
 @throws ReminderBuildException will be thrown when input is missing or invalid (see ReminderBuildExceptionType for reasons)
 */
- (instancetype)initWithBaseReminder_BaseReminderBuilder:(BaseReminder_BaseReminderBuilder *)reminderBuilder;

/**
 @brief Create the reminder using parameters (the builder should be used in most cases)
 @param id the unique ID of the reminder
 @param reminderType the type of the reminder ( ReminderType#DO for Reminder.DoReminder , ReminderType#CALL for BasedReminder.callReminder.CallReminder or ReminderType#NOTIFY for BasedReminder.notificationReminder.NotificationReminder )
 @param trigger the trigger that will make the reminder notify
 @param status the status of the reminder
 @param triggeredTime the time that the reminder was triggered, or -1 if not triggered yet
 @param addedTime the time that the reminder was added, or -1 if not added yet
 @throws ReminderBuildException will be thrown when input is missing or invalid (see ReminderBuildExceptionType for reasons)
 */
- (instancetype)initWithNSString:(NSString *)id_
            withReminderType:(ReminderType *)reminderType
                    withITrigger:(id<ITrigger>)trigger
          withReminderStatus:(ReminderStatus *)status
                        withLong:(long64)triggeredTime
                        withLong:(long64)addedTime;

/**
 @return the unique ID of the reminder
 */
- (NSString *)getId;

/**
 @return the type of the reminder ( ReminderType#DO for Reminder.DoReminder , ReminderType#CALL for BasedReminder.callReminder.CallReminder or ReminderType#NOTIFY for BasedReminder.notificationReminder.NotificationReminder )
 */
- (ReminderType *)getReminderType;

/**
 @return the trigger that will make the reminder notify
 */
- (id<ITrigger>)getTrigger;

/**
 @return the status of the reminder
 */
- (ReminderStatus *)getStatus;

/**
 @return the time that the reminder was triggered, or -1 if not triggered yet
 */
- (long64)getTriggeredTime;

- (boolean)isEqual:(id)o;

- (NSUInteger)hash;

/**
 @return the time that the reminder was added, or -1 if not added yet
 */
- (long64)getAddedTime;

- (void)copyAllFieldsTo:(BaseReminder *)other;

@end

__attribute__((always_inline)) inline void BaseReminder_init() {}

//J2OBJC_FIELD_SETTER(BaseReminder, m_id_, NSString *)
//J2OBJC_FIELD_SETTER(BaseReminder, m_reminderType_, ReminderType *)
//J2OBJC_FIELD_SETTER(BaseReminder, m_trigger_, id<ITrigger>)
//J2OBJC_FIELD_SETTER(BaseReminder, m_status_, ReminderStatus *)

typedef BaseReminder ComIntelWearablePlatformTimeiqApiRemindersBaseReminder;

@interface BaseReminder_BaseReminderBuilder : NSObject {
 @public
  ReminderType *reminderType_;
  id<ITrigger> trigger_;
  NSString *id__;
  ReminderStatus *status_;
  long64 triggeredTime_;
  long64 addedTime_;
}

/**
 @brief Create a builder for creating the reminder
 @param trigger the trigger that will make the reminder notify
 @param reminderType the type of the reminder ( ReminderType#DO for Reminder.DoReminder , ReminderType#CALL for BasedReminder.callReminder.CallReminder or ReminderType#NOTIFY for BasedReminder.notificationReminder.NotificationReminder )
 */
- (instancetype)initWithITrigger:(id<ITrigger>)trigger
            withReminderType:(ReminderType *)reminderType;

/**
 @param newId set the unique ID of the reminder the id is created automatically It should not be changed.
 @return the builder
 */
- (id)setIdWithNSString:(NSString *)newId;

/**
 @param status set the status of the reminder by default it is created with status ReminderStatus#NA . It should not be changed. Adding a reminder with a different status will throw an exception
 @return 
 */
- (id)setStatusWithReminderStatus:(ReminderStatus *)status;

/**
 @param triggeredTime set the time that the reminder was triggered by default it is created with triggeredTime = -1 It should not be changed. Adding a reminder with a different triggeredTime will throw an exception
 @return 
 */
- (id)setTriggeredTimeWithLong:(long64)triggeredTime;

/**
 @param addedTime set the time that the reminder was added to the remindersManager by default it is created with addedTime = -1 It should not be changed. Adding a reminder with a different addedTime will throw an exception
 @return 
 */
- (id)setAddedTimeWithLong:(long64)addedTime;

/**
 @return the type of the reminder ( ReminderType#DO for Reminder.DoReminder , ReminderType#CALL for BasedReminder.callReminder.CallReminder or ReminderType#NOTIFY for BasedReminder.notificationReminder.NotificationReminder )
 */
- (ReminderType *)getReminderType;

/**
 @return the trigger that will make the reminder notify
 */
- (id<ITrigger>)getTrigger;

/**
 @return the unique ID of the reminder
 */
- (NSString *)getId;

/**
 @return the status of the reminder
 */
- (ReminderStatus *)getStatus;

/**
 @return the time that the reminder was triggered, or -1 if it did not trigger yet
 */
- (long64)getTriggeredTime;

/**
 @return the time that the reminder was added to the remindersManager, or -1 if it did not added yet
 */
- (long64)getAddedTime;

- (void)copyAllFieldsTo:(BaseReminder_BaseReminderBuilder *)other;

@end

__attribute__((always_inline)) inline void BaseReminder_BaseReminderBuilder_init() {}

//J2OBJC_FIELD_SETTER(BaseReminder_BaseReminderBuilder, reminderType_, ReminderType *)
//J2OBJC_FIELD_SETTER(BaseReminder_BaseReminderBuilder, trigger_, id<ITrigger>)
//J2OBJC_FIELD_SETTER(BaseReminder_BaseReminderBuilder, id__, NSString *)
//J2OBJC_FIELD_SETTER(BaseReminder_BaseReminderBuilder, status_, ReminderStatus *)

#endif // _BaseReminder_H_
