//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: //com/intel/wearable/platform/timeiq/common/devicestatemanager/IDeviceStateManager.java
//

#ifndef _IDeviceStateManager_H_
#define _IDeviceStateManager_H_

@class ChargeMethod;
@protocol IDeviceStateListener;

#import "JB.h"

/**
 @brief Created by eleuchte on 26/07/2015.
 */
@protocol IDeviceStateManager < NSObject >

/**
 @brief Register for Device state changes updates
 @param deviceStateListener
 */
- (void)registerListenerWithIDeviceStateListener:(id<IDeviceStateListener>)deviceStateListener;

/**
 @brief UnRegister from Device state changes updates
 @param deviceStateListener
 */
- (void)unRegisterListenerWithIDeviceStateListener:(id<IDeviceStateListener>)deviceStateListener;

/**
 @brief Get the battery level (values: 0-100)
 @return 
 */
- (int)getBatteryLevel;

/**
 @brief Get the charging method: values: ChargeMethod.NA - stands for device not connected, all the rest indicate that device is connected (AC, USB, Other)
 @return 
 */
- (ChargeMethod *)getChargingMethod;

/**
 @brief Send data over network flag subject to : network over wifi + battery level of at least 60
 @return 
 */
- (boolean)isSendDataOverNetwork;

/**
 @brief Roaming network availability - mind that once connected to WIFI, there will be no roaming indication
 @return 
 */
- (boolean)isNetworkRoaming;

/**
 @brief Network connected over wifi - MIND THAT THIS NOT REPRESENT WIFI Enable/Disable, but if the network is using WIFI
 @return 
 */
- (boolean)isNetworkOverWifi;

/**
 @brief Network availability (over mobile or wifi)
 @return 
 */
- (boolean)isNetworkAvailable;

/**
 @brief Location services based GPS (highest accuracy level)
 @return 
 */
- (boolean)isGPSAvailable;

@end

__attribute__((always_inline)) inline void IDeviceStateManager_init() {}

#define ComIntelWearablePlatformTimeiqCommonDevicestatemanagerIDeviceStateManager IDeviceStateManager

#endif // _IDeviceStateManager_H_
